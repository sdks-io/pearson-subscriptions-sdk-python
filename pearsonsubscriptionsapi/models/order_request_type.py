# -*- coding: utf-8 -*-

"""
pearsonsubscriptionsapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
import dateutil.parser

from pearsonsubscriptionsapi.api_helper import APIHelper
from pearsonsubscriptionsapi.models.account import Account
from pearsonsubscriptionsapi.models.custom_field import CustomField
from pearsonsubscriptionsapi.models.order_request_processing_options import OrderRequestProcessingOptions
from pearsonsubscriptionsapi.models.order_request_type_product import OrderRequestTypeProduct
from pearsonsubscriptionsapi.models.order_request_type_subscription import OrderRequestTypeSubscription


class OrderRequestType(object):

    """Implementation of the 'OrderRequestType' model.

    TODO: type model description here.

    Attributes:
        order_number (str): Hybris/PMC/OASIS Order Number.
        order_date (date): The date when the order is signed. All the order
            actions under this order will use this order date as the contract
            effective date if the contract effective date field is skipped or
            its value is left as null.
        description (str): A description of the order.
        subscription_model_name (str): Subscription Model Name.
        store_code (str): store identifier
        swap_title (bool): Use for swapTitle.If swaptitle than value will be
            true.
        send_email (bool): send email to the user
        account (Account): TODO: type description here.
        order_request_type_subscriptions (List[OrderRequestTypeSubscription]):
            new account details required to create subscription. This block is
            mandate for new customer
        order_request_processing_options (OrderRequestProcessingOptions):
            Invoice or Payment.
        order_request_type_products (List[OrderRequestTypeProduct]): TODO:
            type description here.
        custom_fields (List[CustomField]): Information about the payment
            related fields.
        payment_capture (object): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "order_number": 'orderNumber',
        "order_date": 'orderDate',
        "description": 'description',
        "subscription_model_name": 'subscriptionModelName',
        "store_code": 'storeCode',
        "swap_title": 'swapTitle',
        "send_email": 'sendEmail',
        "account": 'account',
        "order_request_type_subscriptions": 'orderRequestTypeSubscriptions',
        "order_request_processing_options": 'orderRequestProcessingOptions',
        "order_request_type_products": 'orderRequestTypeProducts',
        "custom_fields": 'customFields',
        "payment_capture": 'paymentCapture'
    }

    _optionals = [
        'order_number',
        'order_date',
        'description',
        'subscription_model_name',
        'store_code',
        'swap_title',
        'send_email',
        'account',
        'order_request_type_subscriptions',
        'order_request_processing_options',
        'order_request_type_products',
        'custom_fields',
        'payment_capture',
    ]

    def __init__(self,
                 order_number=APIHelper.SKIP,
                 order_date=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 subscription_model_name=APIHelper.SKIP,
                 store_code=APIHelper.SKIP,
                 swap_title=APIHelper.SKIP,
                 send_email=APIHelper.SKIP,
                 account=APIHelper.SKIP,
                 order_request_type_subscriptions=APIHelper.SKIP,
                 order_request_processing_options=APIHelper.SKIP,
                 order_request_type_products=APIHelper.SKIP,
                 custom_fields=APIHelper.SKIP,
                 payment_capture=APIHelper.SKIP):
        """Constructor for the OrderRequestType class"""

        # Initialize members of the class
        if order_number is not APIHelper.SKIP:
            self.order_number = order_number 
        if order_date is not APIHelper.SKIP:
            self.order_date = order_date 
        if description is not APIHelper.SKIP:
            self.description = description 
        if subscription_model_name is not APIHelper.SKIP:
            self.subscription_model_name = subscription_model_name 
        if store_code is not APIHelper.SKIP:
            self.store_code = store_code 
        if swap_title is not APIHelper.SKIP:
            self.swap_title = swap_title 
        if send_email is not APIHelper.SKIP:
            self.send_email = send_email 
        if account is not APIHelper.SKIP:
            self.account = account 
        if order_request_type_subscriptions is not APIHelper.SKIP:
            self.order_request_type_subscriptions = order_request_type_subscriptions 
        if order_request_processing_options is not APIHelper.SKIP:
            self.order_request_processing_options = order_request_processing_options 
        if order_request_type_products is not APIHelper.SKIP:
            self.order_request_type_products = order_request_type_products 
        if custom_fields is not APIHelper.SKIP:
            self.custom_fields = custom_fields 
        if payment_capture is not APIHelper.SKIP:
            self.payment_capture = payment_capture 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        order_number = dictionary.get("orderNumber") if dictionary.get("orderNumber") else APIHelper.SKIP
        order_date = dateutil.parser.parse(dictionary.get('orderDate')).date() if dictionary.get('orderDate') else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        subscription_model_name = dictionary.get("subscriptionModelName") if dictionary.get("subscriptionModelName") else APIHelper.SKIP
        store_code = dictionary.get("storeCode") if dictionary.get("storeCode") else APIHelper.SKIP
        swap_title = dictionary.get("swapTitle") if "swapTitle" in dictionary.keys() else APIHelper.SKIP
        send_email = dictionary.get("sendEmail") if "sendEmail" in dictionary.keys() else APIHelper.SKIP
        account = Account.from_dictionary(dictionary.get('account')) if 'account' in dictionary.keys() else APIHelper.SKIP
        order_request_type_subscriptions = None
        if dictionary.get('orderRequestTypeSubscriptions') is not None:
            order_request_type_subscriptions = [OrderRequestTypeSubscription.from_dictionary(x) for x in dictionary.get('orderRequestTypeSubscriptions')]
        else:
            order_request_type_subscriptions = APIHelper.SKIP
        order_request_processing_options = OrderRequestProcessingOptions.from_dictionary(dictionary.get('orderRequestProcessingOptions')) if 'orderRequestProcessingOptions' in dictionary.keys() else APIHelper.SKIP
        order_request_type_products = None
        if dictionary.get('orderRequestTypeProducts') is not None:
            order_request_type_products = [OrderRequestTypeProduct.from_dictionary(x) for x in dictionary.get('orderRequestTypeProducts')]
        else:
            order_request_type_products = APIHelper.SKIP
        custom_fields = None
        if dictionary.get('customFields') is not None:
            custom_fields = [CustomField.from_dictionary(x) for x in dictionary.get('customFields')]
        else:
            custom_fields = APIHelper.SKIP
        payment_capture = dictionary.get("paymentCapture") if dictionary.get("paymentCapture") else APIHelper.SKIP
        # Return an object of this model
        return cls(order_number,
                   order_date,
                   description,
                   subscription_model_name,
                   store_code,
                   swap_title,
                   send_email,
                   account,
                   order_request_type_subscriptions,
                   order_request_processing_options,
                   order_request_type_products,
                   custom_fields,
                   payment_capture)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'order_number={self.order_number!r}, '
                f'order_date={self.order_date!r}, '
                f'description={self.description!r}, '
                f'subscription_model_name={self.subscription_model_name!r}, '
                f'store_code={self.store_code!r}, '
                f'swap_title={self.swap_title!r}, '
                f'send_email={self.send_email!r}, '
                f'account={self.account!r}, '
                f'order_request_type_subscriptions={self.order_request_type_subscriptions!r}, '
                f'order_request_processing_options={self.order_request_processing_options!r}, '
                f'order_request_type_products={self.order_request_type_products!r}, '
                f'custom_fields={self.custom_fields!r}, '
                f'payment_capture={self.payment_capture!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'order_number={self.order_number!s}, '
                f'order_date={self.order_date!s}, '
                f'description={self.description!s}, '
                f'subscription_model_name={self.subscription_model_name!s}, '
                f'store_code={self.store_code!s}, '
                f'swap_title={self.swap_title!s}, '
                f'send_email={self.send_email!s}, '
                f'account={self.account!s}, '
                f'order_request_type_subscriptions={self.order_request_type_subscriptions!s}, '
                f'order_request_processing_options={self.order_request_processing_options!s}, '
                f'order_request_type_products={self.order_request_type_products!s}, '
                f'custom_fields={self.custom_fields!s}, '
                f'payment_capture={self.payment_capture!s})')
