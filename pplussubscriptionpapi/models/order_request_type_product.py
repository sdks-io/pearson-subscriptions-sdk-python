# -*- coding: utf-8 -*-

"""
pplussubscriptionpapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pplussubscriptionpapi.api_helper import APIHelper


class OrderRequestTypeProduct(object):

    """Implementation of the 'OrderRequestTypeProduct' model.

    TODO: type model description here.

    Attributes:
        isbn (str): product isbn value
        ppid (str): product ppid value
        duration (float): Duration of the entitlement in days for this product
        tax (float): Cost of tax on the product
        price (float): Cost of the product

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "isbn": 'isbn',
        "ppid": 'ppid',
        "duration": 'duration',
        "tax": 'tax',
        "price": 'price'
    }

    _optionals = [
        'isbn',
        'ppid',
        'duration',
        'tax',
        'price',
    ]

    def __init__(self,
                 isbn=APIHelper.SKIP,
                 ppid=APIHelper.SKIP,
                 duration=APIHelper.SKIP,
                 tax=APIHelper.SKIP,
                 price=APIHelper.SKIP):
        """Constructor for the OrderRequestTypeProduct class"""

        # Initialize members of the class
        if isbn is not APIHelper.SKIP:
            self.isbn = isbn 
        if ppid is not APIHelper.SKIP:
            self.ppid = ppid 
        if duration is not APIHelper.SKIP:
            self.duration = duration 
        if tax is not APIHelper.SKIP:
            self.tax = tax 
        if price is not APIHelper.SKIP:
            self.price = price 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        isbn = dictionary.get("isbn") if dictionary.get("isbn") else APIHelper.SKIP
        ppid = dictionary.get("ppid") if dictionary.get("ppid") else APIHelper.SKIP
        duration = dictionary.get("duration") if dictionary.get("duration") else APIHelper.SKIP
        tax = dictionary.get("tax") if dictionary.get("tax") else APIHelper.SKIP
        price = dictionary.get("price") if dictionary.get("price") else APIHelper.SKIP
        # Return an object of this model
        return cls(isbn,
                   ppid,
                   duration,
                   tax,
                   price)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'isbn={self.isbn!r}, '
                f'ppid={self.ppid!r}, '
                f'duration={self.duration!r}, '
                f'tax={self.tax!r}, '
                f'price={self.price!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'isbn={self.isbn!s}, '
                f'ppid={self.ppid!s}, '
                f'duration={self.duration!s}, '
                f'tax={self.tax!s}, '
                f'price={self.price!s})')
