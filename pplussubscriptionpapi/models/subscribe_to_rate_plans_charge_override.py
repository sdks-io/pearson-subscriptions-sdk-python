# -*- coding: utf-8 -*-

"""
pplussubscriptionpapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pplussubscriptionpapi.api_helper import APIHelper
from pplussubscriptionpapi.models.customer_facing_custom_fields import CustomerFacingCustomFields
from pplussubscriptionpapi.models.rate_plan_end_date import RatePlanEndDate
from pplussubscriptionpapi.models.rate_plan_pricing import RatePlanPricing


class SubscribeToRatePlansChargeOverride(object):

    """Implementation of the 'SubscribeToRatePlansChargeOverride' model.

    TODO: type model description here.

    Attributes:
        product_rate_plan_charge_id (str): This is unique rate plan charge id
            respective to rate plan id. It signifies the subscription
            type,entitlementLevel,maxEntitlements,numEntitlements etc.
        customer_facing_custom_fields (CustomerFacingCustomFields): TODO: type
            description here.
        rate_plan_pricing (RatePlanPricing): TODO: type description here.
        rate_plan_end_date (RatePlanEndDate): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "product_rate_plan_charge_id": 'productRatePlanChargeId',
        "customer_facing_custom_fields": 'customerFacingCustomFields',
        "rate_plan_pricing": 'ratePlanPricing',
        "rate_plan_end_date": 'ratePlanEndDate'
    }

    _optionals = [
        'product_rate_plan_charge_id',
        'customer_facing_custom_fields',
        'rate_plan_pricing',
        'rate_plan_end_date',
    ]

    def __init__(self,
                 product_rate_plan_charge_id=APIHelper.SKIP,
                 customer_facing_custom_fields=APIHelper.SKIP,
                 rate_plan_pricing=APIHelper.SKIP,
                 rate_plan_end_date=APIHelper.SKIP):
        """Constructor for the SubscribeToRatePlansChargeOverride class"""

        # Initialize members of the class
        if product_rate_plan_charge_id is not APIHelper.SKIP:
            self.product_rate_plan_charge_id = product_rate_plan_charge_id 
        if customer_facing_custom_fields is not APIHelper.SKIP:
            self.customer_facing_custom_fields = customer_facing_custom_fields 
        if rate_plan_pricing is not APIHelper.SKIP:
            self.rate_plan_pricing = rate_plan_pricing 
        if rate_plan_end_date is not APIHelper.SKIP:
            self.rate_plan_end_date = rate_plan_end_date 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        product_rate_plan_charge_id = dictionary.get("productRatePlanChargeId") if dictionary.get("productRatePlanChargeId") else APIHelper.SKIP
        customer_facing_custom_fields = CustomerFacingCustomFields.from_dictionary(dictionary.get('customerFacingCustomFields')) if 'customerFacingCustomFields' in dictionary.keys() else APIHelper.SKIP
        rate_plan_pricing = RatePlanPricing.from_dictionary(dictionary.get('ratePlanPricing')) if 'ratePlanPricing' in dictionary.keys() else APIHelper.SKIP
        rate_plan_end_date = RatePlanEndDate.from_dictionary(dictionary.get('ratePlanEndDate')) if 'ratePlanEndDate' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(product_rate_plan_charge_id,
                   customer_facing_custom_fields,
                   rate_plan_pricing,
                   rate_plan_end_date)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'product_rate_plan_charge_id={self.product_rate_plan_charge_id!r}, '
                f'customer_facing_custom_fields={self.customer_facing_custom_fields!r}, '
                f'rate_plan_pricing={self.rate_plan_pricing!r}, '
                f'rate_plan_end_date={self.rate_plan_end_date!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'product_rate_plan_charge_id={self.product_rate_plan_charge_id!s}, '
                f'customer_facing_custom_fields={self.customer_facing_custom_fields!s}, '
                f'rate_plan_pricing={self.rate_plan_pricing!s}, '
                f'rate_plan_end_date={self.rate_plan_end_date!s})')
